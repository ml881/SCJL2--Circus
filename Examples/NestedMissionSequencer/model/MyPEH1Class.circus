\begin{zsection}
  \SECTION ~ MyPEH1Class ~ \parents ~ MissionChan, SchedulableChan, SchedulableId,\\
   \t1 MissionId, MissionIds, TopLevelMissionSequencerChan, PeriodicEventHandlerChan, \\
   \t1 SafeletMethChan, FrameworkChan
\end{zsection}
%
\begin{circus}
  \circclass ~ MyPEH1Class ~\circdef ~ \circbegin 
\end{circus}
%
%public MyPEH(PriorityParameters priority, PeriodicParameters release, StorageParameters storage, Mission m) {
%			super(priority, release, storage, "mission1--peh");
%			this.m = m;
%		}
%	
%		public void handleAsyncEvent() {
%			devices.Console.println("Mission 1: PEH1: " + count);
%			count++;
%			if (count == 10) {
%				m.requestTermination();
%				devices.Console.println("Mission T");
%			}
%		}
%	}
\begin{schema}{\circstateignore State}
	count : \num \\	
	m : MissionID \\

\end{schema}
%
\begin{parser}
\begin{circusaction}
\circstate State
\end{circusaction}
\end{parser}
%
\begin{schema}{\circinitial Init}
	State~' \\
	mIn? : MissionID \\

\where
	m' = mIn? \\
	count' = 0 \\	

\end{schema}
%
\begin{circusaction}
\circpublic handleAsyncEvent \circdef \circvar ret : \boolean \circspot \\
\t1 count := count +1 \circseq \\
\t1 \circif count = 10 \circthen \\
\t2 ret:= \true \\			
\t1 \circelse \lnot (count = 10) \circthen \\
\t2 ret := \false \\ 	
\t1 \circfi 
\end{circusaction}
%
\begin{parser}
\begin{circusaction}
  \circspot \Skip
\end{circusaction}}
\end{parser}
%
\begin{circus}
  \circend
\end{circus}