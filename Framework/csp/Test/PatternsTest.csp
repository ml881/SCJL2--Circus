include "PatternTypes.csp"
include "PatternUser.csp"

APPInitializePhase(MainMissionId) =  
--InitializePhase_mm = 
  initializeCall.MainMissionId   -> 
  register!ACModeChangerId!MainMissionId  -> 
  register!EnvironmentMonitorId!MainMissionId  -> 
  register!FlightSensorsMonitorId!MainMissionId ->
  register!CommunicationsHandlerId!MainMissionId ->
  register!ControlHandlerId!MainMissionId  ->  
  initializeRet.MainMissionId  -> 
 --SKIP
 MissionPhase(MainMissionId, {ACModeChangerId, EnvironmentMonitorId, FlightSensorsMonitorId, CommunicationsHandlerId, ControlHandlerId})

APPInitializePhase(TakeOffModeId) =
--InitializePhase_tom = 
  initializeCall.TakeOffModeId  -> 

  register!TakeOffMonitorId!TakeOffModeId -> 
  register!TakeOffFailureHandlerId!TakeOffModeId -> 
  register!LandingGearHandler1Id!TakeOffModeId ->  
   
  initializeRet.TakeOffModeId -> 
  --SKIP
    MissionPhase(TakeOffModeId, {TakeOffMonitorId, TakeOffFailureHandlerId, LandingGearHandler1Id})

APPInitializePhase(CruiseModeId) =
--InitializePhase_cm = 
  initializeCall.CruiseModeId  -> 

  register!NavigationMonitorId!CruiseModeId ->   
     
  register!BeginLandingHandlerId!CruiseModeId ->   

  initializeRet.CruiseModeId -> 
--  SKIP
MissionPhase(CruiseModeId, {NavigationMonitorId, BeginLandingHandlerId})


APPInitializePhase(LandModeId) =
--InitializePhase_lam = 
  initializeCall.LandModeId  -> 

  register!GroundDistanceMonitorId!LandModeId ->   
  register!LandingGearHandler2Id!LandModeId -> 
  register!SafeLandingHandlerId!LandModeId -> 
  register!InstrumentLandingSystemMonitorId!LandModeId -> 

  initializeRet.LandModeId -> 
--  SKIP
  MissionPhase(LandModeId, {GroundDistanceMonitorId, LandingGearHandler2Id, SafeLandingHandlerId, InstrumentLandingSystemMonitorId})







 MissionPhase(m,s) = out.m.s -> SKIP
