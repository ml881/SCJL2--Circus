\begin{zsection}
  \SECTION ~ PriorityQueue ~ \parents ~ scj\_prelude, GlobalTypes, Priority
\end{zsection}
%
\begin{axdef}
PriorityQueue == PriorityLevel \fun (\iseq ThreadID)
\where
\forall pq : PriorityQueue @
 nullThreadId  \notin \ran (\bigcup(\ran pq))\\
\end{axdef}
%
\begin{axdef}
IsEmpty : PriorityQueue \fun \boolean
\where
\forall pq : PriorityQueue | (\bigcup(pq \limg PriorityLevel \rimg )) = \emptyset @ \\
	\quad IsEmpty(pq) = \true \\
\end{axdef}
%
\begin{axdef}
AddToPriorityQueue : PriorityQueue \cross ThreadID \cross PriorityLevel \fun PriorityQueue
\where
\forall pq : PriorityQueue ; t : ThreadID ; p : PriorityLevel | \\
	\quad	t \neq nullThreadId \land \\
	\quad	t \notin \ran (\bigcup(\ran(pq) )) @ \\
AddToPriorityQueue(pq, t, p) = (pq \oplus \{ p \mapsto pq(p) \cat \langle t\rangle \})
\end{axdef}
%
\begin{axdef}
RemoveFromPriorityQueue : PriorityQueue \pfun PriorityQueue \cross ThreadID
\where
(\forall pq : PriorityQueue @  \\
\quad	(\exists t: ThreadID; p : PriorityLevel | \\
\qquad		p = max~\{pl : PriorityLevel | pq(pl) \neq \langle\rangle\} \land \\
\qquad		t = head~pq(p) \\
\qquad		@ RemoveFromPriorityQueue(pq) = (pq \oplus \{p \mapsto tail~pq(p)\}, t) ) )\\
\end{axdef}
%
\begin{axdef}
RemoveThreadFromPriorityQueue : PriorityQueue \cross ThreadID \cross PriorityLevel \fun PriorityQueue
\where
\forall pq: PriorityQueue; t : ThreadID ; p : PriorityLevel | \\
\quad	pq(p) \filter \{t\} \neq \langle \rangle @ \\
\quad	RemoveThreadFromPriorityQueue(pq, t, p) = pq \oplus \{ p \mapsto squash~(pq(p) \nrres \{t\})\}
\end{axdef}
%
\begin{axdef}
ElementsOf : PriorityQueue \fun \power ThreadID \\
\where
\forall pq: PriorityQueue | pq \neq \emptyset @ \\
\quad	(\exists elems : \power ThreadID | \\
\qquad		elems = \bigcup (\ran \limg \ran pq \rimg) \\
\qquad		@ ElementsOf(pq) = elems )
\end{axdef}
