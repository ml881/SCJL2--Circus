\begin{zsection}
  \SECTION ~ ManagedThread ~ \parents ~ ManagedThreadChan, SchedulableId, MissionId, MissionIds, \\
  \quad TopLevelMissionSequencerChan, SchedulableChan, SafeletMethChan, FrameworkChan
\end{zsection}

%
\begin{circus}
  \circprocess ManagedThreadFW ~ \circdef ~ schedulable : SchedulableID \circspot ~\circbegin
\end{circus}
%
\begin{schema}{State}
  controllingMission : MissionID\\
  applicationTerminating : \boolean
\end{schema}
%
\begin{parser}
\begin{circusaction}
\circstate State
\end{circusaction}
\end{parser}
%
\begin{schema}{Init}
  State~'
  \where
  controllingMission' = nullMissionId\\
  applicationTerminating' = \false
\end{schema}
%
\begin{circusaction}
Start \circdef\\
\quad \circblockopen
   Register \circseq \\
   Activate\\
  \circblockclose   \\
\quad  \extchoice\\
\quad  \circblockopen
  	activate\_schedulables?someMissionID \then \\
  	Start
  \circblockclose  \\
\quad  \extchoice \\
\quad  \circblockopen
	done\_toplevel\_sequencer \then \\
	applicationTerminating := \true \\
      \circblockclose
\end{circusaction}
%

\begin{circusaction}
Register \circdef\\
\quad  register~.~schedulable~?~mID \then\\
\quad  controllingMission := mID
\end{circusaction}
%
\begin{circusaction}
Activate \circdef\\
\quad    activate\_schedulables~.~controllingMission \then\\
\quad    \Skip
\end{circusaction}
%
\begin{circusaction}
Execute ~ \circdef\\
\quad    Run  \lpar \emptyset | \lchanset runRet \rchanset | \emptyset \rpar Methods
\end{circusaction}
%
\begin{circusaction}
Run \circdef\\
\quad    runCall~.~schedulable \then\\
\quad    runRet~.~schedulable \then \\
\quad    done\_schedulable~.~schedulable \then\\
\quad    \Skip
\end{circusaction}
%
\begin{circusaction}
Methods \circdef \\
\quad  	\circblockopen
  SignalTerminationMeth \circseq Methods
  \circblockclose\\
\quad  \extchoice \\
\quad \circblockopen
  runRet~.~schedulable \then \\
  \Skip
\circblockclose
\end{circusaction}
%
\begin{circusaction}
SignalTerminationMeth \circdef \\
  \quad signalTerminationCall~.~schedulable \then \\
  \quad signalTerminationRet~.~schedulable \then \Skip
\end{circusaction}
%
\begin{circusaction}
Cleanup \circdef \\
  \quad cleanupSchedulableCall~.~schedulable \then\\
  \quad cleanupSchedulableRet~.~schedulable \then \Skip
\end{circusaction}
%
\begin{circusaction}
  \circspot \circblockopen \circmu X \circspot \lschexpract Init \rschexpract \circseq Start \circseq\\
  		\circblockopen\circif applicationTerminating = \false \circthen \\
  		\qquad \circblockopen Execute \circseq Cleanup \circseq X \circblockclose \\
  		\circelse applicationTerminating = \true \circthen \\
  		\qquad \circblockopen
  			end\_managedThread\_app~.~schedulable \then\\
  			\Skip
  		\circblockclose \\
  		\circfi \circblockclose \circblockclose
\end{circusaction}
%
\begin{circus}
  \circend
\end{circus}
