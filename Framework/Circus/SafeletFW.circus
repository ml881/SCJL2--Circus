\begin{zsection}
  \SECTION ~ SafeletFW ~ \parents ~ scj\_prelude, SchedulableId, SchedulableIds, SafeletChan, \\
  \quad TopLevelMissionSequencerChan, FrameworkChan, SchedulableChan
\end{zsection}
%
\begin{circus}
  \circprocess ~ SafeletFW ~ \circdef ~ \circbegin
\end{circus}
%
\begin{schema}{State}
   globallyRegistered : \finset SchedulableID\\
   topLevelSequencer : SchedulableID
\end{schema}
%
\begin{schema}{Init}
  State~'\\
  \where
  globallyRegistered' = \emptyset\\
  topLevelSequencer' = nullSequencerId
\end{schema}
%
\begin{parser}
\begin{circusaction}
\circstate State
\end{circusaction}
\end{parser}
%
\begin{circusaction}
InitializeApplication \circdef \\
\quad     initializeApplicationCall \then \\
\quad     initializeApplicationRet \then\\
\quad     \Skip
\end{circusaction}
%
\begin{circusaction}
Execute \circdef \\
\quad     GetSequencerMeth \circseq \\
\quad     \circif topLevelSequencer \neq nullSequencerId \circthen\\
\quad     \circblockopen
     		 start\_toplevel\_sequencer~.~topLevelSequencer \then\\
     		 Methods \\
        \circblockclose   \\
\quad    \circelse topLevelSequencer = nullSequencerId \circthen\\
\qquad       \Skip\\
\quad    \circfi
\end{circusaction}
%
\begin{circusaction}
GetSequencerMeth \circdef \\
\quad 	getSequencerCall \then\\
\quad     getSequencerRet~?~sequencer \then\\
\quad     topLevelSequencer := sequencer
\end{circusaction}
%
\begin{circusaction}
Methods \circdef \\
\quad\circblockopen
	\circblockopen
		Register \circseq\\
    		Methods
    	\circblockclose \\
    	\extchoice \\
    	\circblockopen
    		Deregister \circseq \\
    		Methods
    	\circblockclose \\
    	\extchoice\\
    	\circblockopen
    		done\_toplevel\_sequencer \then \\
    		\Skip
    	\circblockclose \\
  \circblockclose
\end{circusaction}
%
\begin{circusaction}
Register \circdef \\

    \circblockopen
    	register~?~schedulable\prefixcolon(schedulable \notin globallyRegistered)~?~mission \then \\
    	\circblockopen
    		globallyRegistered := globallyRegistered \cup \{schedulable\} \circseq \\
    		checkSchedulable~.~mission~!~\true \then \\
    		\Skip\\
	\circblockclose  \\
    \circblockclose \\
    \extchoice \\
    \circblockopen
      register~?~schedulable\prefixcolon(schedulable \in globallyRegistered)~?~mission \then \\
      checkSchedulable~.~mission~!~\false \then \\
     \Skip\\
    \circblockclose \\

\end{circusaction}
%
\begin{circusaction}
Deregister \circdef \\
\quad     deregister~?~schedulables \then \\
\quad     globallyRegistered := (globallyRegistered \setminus schedulables) \circseq \\
\quad    \Skip
\end{circusaction}
%
\begin{circusaction}
  \circspot \circblockopen  \lschexpract Init \rschexpract \circseq InitializeApplication \circseq Execute\circblockclose
\end{circusaction}
%
\begin{circus}
  \circend
\end{circus}
